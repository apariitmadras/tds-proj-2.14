import os
import subprocess
import tempfile
import textwrap
import logging

log = logging.getLogger("sandbox")

RUN_PY_TEMPLATE = """# Auto-generated by data-analyst-agent
import json, sys
# --- USER CODE START ---
{code}
# --- USER CODE END ---
"""

def run_user_code(code: str, timeout: int = 60):
    """
    Writes code to a temp file and executes it with a strict timeout.
    The user code must print ONLY the final JSON to stdout.
    Returns (stdout, stderr, returncode).
    """
    try:
        # Basic safety hardening flags (still not a full sandbox; see README)
        env = os.environ.copy()
        env["PYTHONUNBUFFERED"] = "1"

        with tempfile.TemporaryDirectory() as tmp:
            path = os.path.join(tmp, "job.py")
            with open(path, "w", encoding="utf-8") as f:
                f.write(RUN_PY_TEMPLATE.format(code=code))
            proc = subprocess.run(
                ["python", path],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True,
                timeout=timeout,
                env=env,
            )
            return proc.stdout, proc.stderr, proc.returncode
    except subprocess.TimeoutExpired as te:
        return "", f"TimeoutExpired: {te}", 124
    except Exception as e:
        return "", f"ExecutionError: {e}", 1
